version: "3.7"

services:
  # DATABASE
  db:
    image: postgres:14.3
    container_name: db
    restart: always
    env_file:
      - .env.local
    environment:
      - NODE_ENV=development
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=wedding
    ports:
      - 5433:5432
    volumes:
      - "./.postgres:/var/lib/postgresql/data"
    networks:
      - pm-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 10s
      retries: 10

  # API
  api:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: api
    restart: always
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - .env.local
    environment:
      - NODE_ENV=development
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=wedding
    ports:
      - "8080:8080"
    volumes:
      - .:/app
      - node_modules:/app/node_modules
    networks:
      - pm-network

networks:
  pm-network:
    driver: bridge

volumes:
  .postgres:
  node_modules:
